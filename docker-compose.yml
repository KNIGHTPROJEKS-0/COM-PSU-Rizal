version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: com-psu-rizal-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "54322:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase Auth (GoTrue)
  gotrue:
    image: supabase/gotrue:v2.174.0
    container_name: com-psu-rizal-gotrue
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      GOTRUE_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_EXTERNAL_EMAIL_ENABLED: true
      GOTRUE_MAILER_AUTOCONFIRM: true
    ports:
      - "9999:9999"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:9999/health || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase REST API
  rest:
    image: postgrest/postgrest:v12.2.3
    container_name: com-psu-rizal-rest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgresql://postgres:postgres@postgres:5432/postgres
      PGRST_DB_SCHEMA: public,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_JWT_AUD: authenticated
    ports:
      - "3001:3000"

  # Supabase Realtime
  realtime:
    image: supabase/realtime:v2.33.70
    container_name: com-psu-rizal-realtime
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_SSL: false
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      JWT_AUD: authenticated
      PORT: 4000
    ports:
      - "4000:4000"

  # Supabase Storage
  storage:
    image: supabase/storage-api:v1.12.0
    container_name: com-psu-rizal-storage
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      POSTGREST_URL: http://rest:3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      PGOPTIONS: "-c search_path=storage"
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
    ports:
      - "8000:8000"
    volumes:
      - storage_data:/var/lib/storage

  # Supabase Studio (Admin Dashboard)
  studio:
    image: supabase/studio:2025.06.02-sha-8f2993d
    container_name: com-psu-rizal-studio
    environment:
      SUPABASE_URL: http://localhost:3001
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODMzgxMjk5Nn0.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      AUTH_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
    ports:
      - "54323:3000"
    depends_on:
      - postgres
      - gotrue
      - rest
      - realtime
      - storage

  # Python FastAPI Backend
  api:
    build: ./services/python
    container_name: com-psu-rizal-api
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./services/python:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: com-psu-rizal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  storage_data:
  redis_data:
